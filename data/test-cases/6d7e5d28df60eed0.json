{"uid":"6d7e5d28df60eed0","name":"test_register_wrong_invitation_code","fullName":"tests.test_register.TestRegister#test_register_wrong_invitation_code","historyId":"2ba0d6ba5e9f8e162cee8dc8c426008a","time":{"start":1746362894329,"stop":1746362895609,"duration":1280},"description":"测试错误的邀请码","descriptionHtml":"<p>测试错误的邀请码</p>\n","status":"failed","statusMessage":"AssertionError: 使用错误的邀请码却仍然注册成功\nassert not True\n +  where True = <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>>()\n +    where <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>> = <pages.register_page.RegisterPage object at 0x000001EC7791B690>.is_registration_successful","statusTrace":"self = <tests.test_register.TestRegister object at 0x000001EC778971D0>\ndriver = <utils.webdriver.WebDriver object at 0x000001EC778A0890>\nbase_url = 'http://211.87.232.162:8080'\n\n    def test_register_wrong_invitation_code(self, driver, base_url):\n        \"\"\"测试错误的邀请码\"\"\"\n        # 创建注册页面对象\n        register_page = RegisterPage(driver)\n    \n        # 导航到注册页面\n        register_page.navigate_to(base_url)\n        register_page.wait_for_page_load()\n    \n        # 生成测试数据\n        username = self.generate_random_username()\n    \n        # 填写表单（错误的邀请码）\n        register_page.set_username(username)\n        register_page.set_password(\"Test@123\")\n        register_page.set_confirm_password(\"Test@123\")\n        register_page.set_invitation_code(\"9999\")  # 错误的邀请码\n        register_page.click_register()\n    \n        # 验证注册失败（未跳转到登录页面）\n>       assert not register_page.is_registration_successful(), \"使用错误的邀请码却仍然注册成功\"\nE       AssertionError: 使用错误的邀请码却仍然注册成功\nE       assert not True\nE        +  where True = <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>>()\nE        +    where <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>> = <pages.register_page.RegisterPage object at 0x000001EC7791B690>.is_registration_successful\n\ntests\\test_register.py:134: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"web_driver","time":{"start":1746362861594,"stop":1746362885884,"duration":24290},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1746362894328,"stop":1746362894328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"driver","time":{"start":1746362894328,"stop":1746362894328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"测试错误的邀请码","status":"failed","statusMessage":"AssertionError: 使用错误的邀请码却仍然注册成功\nassert not True\n +  where True = <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>>()\n +    where <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>> = <pages.register_page.RegisterPage object at 0x000001EC7791B690>.is_registration_successful","statusTrace":"self = <tests.test_register.TestRegister object at 0x000001EC778971D0>\ndriver = <utils.webdriver.WebDriver object at 0x000001EC778A0890>\nbase_url = 'http://211.87.232.162:8080'\n\n    def test_register_wrong_invitation_code(self, driver, base_url):\n        \"\"\"测试错误的邀请码\"\"\"\n        # 创建注册页面对象\n        register_page = RegisterPage(driver)\n    \n        # 导航到注册页面\n        register_page.navigate_to(base_url)\n        register_page.wait_for_page_load()\n    \n        # 生成测试数据\n        username = self.generate_random_username()\n    \n        # 填写表单（错误的邀请码）\n        register_page.set_username(username)\n        register_page.set_password(\"Test@123\")\n        register_page.set_confirm_password(\"Test@123\")\n        register_page.set_invitation_code(\"9999\")  # 错误的邀请码\n        register_page.click_register()\n    \n        # 验证注册失败（未跳转到登录页面）\n>       assert not register_page.is_registration_successful(), \"使用错误的邀请码却仍然注册成功\"\nE       AssertionError: 使用错误的邀请码却仍然注册成功\nE       assert not True\nE        +  where True = <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>>()\nE        +    where <bound method RegisterPage.is_registration_successful of <pages.register_page.RegisterPage object at 0x000001EC7791B690>> = <pages.register_page.RegisterPage object at 0x000001EC7791B690>.is_registration_successful\n\ntests\\test_register.py:134: AssertionError","steps":[],"attachments":[{"uid":"71d229299ac92e0b","name":"stdout","source":"71d229299ac92e0b.txt","type":"text/plain","size":398}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"web_driver::0","time":{"start":1746362895623,"stop":1746362901911,"duration":6288},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_register"},{"name":"subSuite","value":"TestRegister"},{"name":"host","value":"djc"},{"name":"thread","value":"7836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_register"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6d7e5d28df60eed0.json","parameterValues":[]}